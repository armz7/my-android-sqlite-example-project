#summary Some examples of the project code

= getWritableDatabase method in extended SQLiteOpenHelper class =

{{{
/**
   * Create and/or open a database that will be used for reading and writing.
   * Once opened successfully, the database is cached, so you can call this
   * method every time you need to write to the database. Make sure to call
   * close() when you no longer need it.
   * 
   * Errors such as bad permissions or a full disk may cause this operation to
   * fail, but future attempts may succeed if the problem is fixed.
   * 
   * Returns a read/write database object valid until close() is called
   * 
   * Throws SQLiteException if the database cannot be opened for writing
   */

  @Override
  public SQLiteDatabase getWritableDatabase() throws SQLiteException {
    try {
      this.mDb = SQLiteDatabase.openDatabase(this.dbPathToUse + File.separator
          + MyAppDbAdapter.MY_DATABASE_NAME, null,
          SQLiteDatabase.OPEN_READWRITE);

      return this.mDb;
    } catch (SQLException error) {
      MyErrorLog<SQLException> errExcpError = new MyErrorLog<SQLException>(
          this.mCtx);
      errExcpError.addToLogFile(error, "MyAppDbAdapter.getWritableDatabase",
          "SQLException - main try/catch");
      errExcpError = null;

      return null;
    }// end try/catch (SQLException error)
    catch (Exception error) {
      MyErrorLog<Exception> errExcpError = new MyErrorLog<Exception>(this.mCtx);
      errExcpError.addToLogFile(error, "MyAppDbAdapter.getWritableDatabase",
          "main try/catch");
      errExcpError = null;

      return null;
    }// end try/catch (Exception error)
  }// end getWriteableDatabase
}}}


= List Activity onResume Method =

{{{
/**
   * Called after onRestoreInstanceState(Bundle), onRestart(), or onPause(), for
   * your activity to start interacting with the user.
   * 
   * This is a good place to begin animations, open exclusive-access devices
   * (such as the camera), etc.
   * 
   * the data is refreshed
   * 
   */
  @Override
  protected void onResume() {
    /* query sorting options */
    super.onResume();
    try {
      if (this.blSaveNew == true) {
        // call the entry activity again
        this.blSaveNew = false;
        Intent intentInsrt = new Intent(Music_List.this, AddEditMusic.class);
        intentInsrt.putExtra("SHOW_SAVENEW", true);
        startActivityForResult(intentInsrt, ACTIVITY_CREATE);

        return;
      }// end if (blSaveNew == true)

      //set database query class object
      this.dbAppDbObj = new MyAppDbSQL(this);
      
      Music_List.getSortOption(Music_List.this);

      this.fillData();

      this.registerForContextMenu(this.getListView());
    } catch (Exception error) {
      MyErrorLog<Exception> errExcpError = new MyErrorLog<Exception>(
          Music_List.this);
      errExcpError.addToLogFile(error, "Music_List.resumeData", "");
      errExcpError = null;
    }// end try/catch (Exception error)
  }// end onResume
}}}