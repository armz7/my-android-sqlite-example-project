#summary Some examples of the project code

= getWritableDatabase Class =

{{{
/**
   * Create and/or open a database that will be used for reading and writing.
   * Once opened successfully, the database is cached, so you can call this
   * method every time you need to write to the database. Make sure to call
   * close() when you no longer need it.
   * 
   * Errors such as bad permissions or a full disk may cause this operation to
   * fail, but future attempts may succeed if the problem is fixed.
   * 
   * Returns a read/write database object valid until close() is called
   * 
   * Throws SQLiteException if the database cannot be opened for writing
   */

  @Override
  public SQLiteDatabase getWritableDatabase() throws SQLiteException {
    try {
      this.mDb = SQLiteDatabase.openDatabase(this.dbPathToUse + File.separator
          + MyAppDbAdapter.MY_DATABASE_NAME, null,
          SQLiteDatabase.OPEN_READWRITE);

      return this.mDb;
    } catch (SQLException error) {
      MyErrorLog<SQLException> errExcpError = new MyErrorLog<SQLException>(
          this.mCtx);
      errExcpError.addToLogFile(error, "MyAppDbAdapter.getWritableDatabase",
          "SQLException - main try/catch");
      errExcpError = null;

      return null;
    }// end try/catch (SQLException error)
    catch (Exception error) {
      MyErrorLog<Exception> errExcpError = new MyErrorLog<Exception>(this.mCtx);
      errExcpError.addToLogFile(error, "MyAppDbAdapter.getWritableDatabase",
          "main try/catch");
      errExcpError = null;

      return null;
    }// end try/catch (Exception error)
  }// end getWriteableDatabase
}}}


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages